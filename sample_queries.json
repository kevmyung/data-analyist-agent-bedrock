[
  {
    "question": "Check this month's sales",
    "sql_query": "SELECT reference_month, SUM(sales_value_at_handling_reference) AS current_month_sales FROM food_sales_table WHERE reference_month = strftime('%Y.%m', 'now') GROUP BY reference_month;"
  },
  {
    "question": "Check sales compared to the previous month",
    "sql_query": "WITH monthly_sales AS ( SELECT reference_month, SUM(sales_value_at_handling_reference) AS sales FROM food_sales_table WHERE reference_month IN ( strftime('%Y.%m', date('now', 'start of month', '-1 month')), strftime('%Y.%m', 'now') ) GROUP BY reference_month ) SELECT current.sales AS current_month_sales, prior.sales AS previous_month_sales, (current.sales - prior.sales) / NULLIF(prior.sales, 0) * 100 AS mom_change FROM monthly_sales current LEFT JOIN monthly_sales prior ON prior.reference_month = strftime('%Y.%m', date('now', 'start of month', '-1 month')) WHERE current.reference_month = strftime('%Y.%m', 'now');"
  },
  {
    "question": "Department sales for the last three months",
    "sql_query": "SELECT business_current_department_code, business_current_department_name, reference_month, SUM(sales_value_at_handling_reference) AS sales_last_3_months FROM food_sales_table WHERE reference_month >= strftime('%Y.%m', date('now', 'start of month', '-2 months')) GROUP BY business_current_department_code, business_current_department_name, reference_month ORDER BY business_current_department_code, reference_month;"
  },
  {
    "question": "Top customers with sales decline compared to the previous month (MoM)",
    "sql_query": "WITH customer_sales AS ( SELECT customer_id, customer_name, reference_month, SUM(sales_value_at_handling_reference) AS sales FROM food_sales_table WHERE reference_month IN ( strftime('%Y.%m', date('now', 'start of month', '-1 month')), strftime('%Y.%m', 'now') ) GROUP BY customer_id, customer_name, reference_month ), customer_sales_mom AS ( SELECT current.customer_id, current.customer_name, current.sales AS current_month_sales, prior.sales AS previous_month_sales, (current.sales - prior.sales) AS sales_change, ((current.sales - prior.sales) / NULLIF(prior.sales, 0)) * 100 AS mom_change_percentage FROM customer_sales current LEFT JOIN customer_sales prior ON current.customer_id = prior.customer_id AND prior.reference_month = strftime('%Y.%m', date('now', 'start of month', '-1 month')) WHERE current.reference_month = strftime('%Y.%m', 'now') ) SELECT customer_id, customer_name, current_month_sales, previous_month_sales, sales_change, mom_change_percentage FROM customer_sales_mom WHERE sales_change < 0 ORDER BY sales_change ASC LIMIT 10;"
  },
  {
    "question": "Total sales and profit for the past year",
    "sql_query": "SELECT strftime('%Y', 'now') AS year, SUM(sales_value_at_handling_reference) AS total_sales_last_12_months, SUM(sales_profit_amount) AS total_sales_profit_last_12_months FROM food_sales_table WHERE reference_month >= strftime('%Y.%m', date('now', 'start of month', '-11 months'));"
  },
  {
    "question": "Year-over-year Q1 revenue and profit margin growth rates by business division",
    "sql_query": "WITH quarterly_sales AS ( SELECT business_current_department_code, business_current_department_name, CASE WHEN reference_month BETWEEN strftime('%Y.%m', date('now', 'start of year', '-1 year', 'start of month')) AND strftime('%Y.%m', date('now', 'start of year', '-1 year', 'start of month', '+2 months')) THEN 'previous_q1' WHEN reference_month BETWEEN strftime('%Y.%m', date('now', 'start of year', 'start of month')) AND strftime('%Y.%m', date('now', 'start of year', 'start of month', '+2 months')) THEN 'current_q1' END AS quarter, 'Q1' AS quarter_display, SUM(sales_value_at_handling_reference) AS total_sales, SUM(sales_profit_amount) AS total_profit FROM food_sales_table WHERE reference_month BETWEEN strftime('%Y.%m', date('now', 'start of year', '-1 year', 'start of month')) AND strftime('%Y.%m', date('now', 'start of year', 'start of month', '+2 months')) GROUP BY business_current_department_code, business_current_department_name, quarter ) SELECT current.business_current_department_code, current.business_current_department_name, current.quarter_display AS quarter, (current.total_sales - previous.total_sales) / NULLIF(previous.total_sales, 0) * 100 AS sales_growth_rate, ((current.total_profit / NULLIF(current.total_sales, 0)) - (previous.total_profit / NULLIF(previous.total_sales, 0))) * 100 AS profit_margin_change_rate FROM quarterly_sales current JOIN quarterly_sales previous ON current.business_current_department_code = previous.business_current_department_code AND current.quarter = 'current_q1' AND previous.quarter = 'previous_q1' ORDER BY current.business_current_department_name;"
  },
  {
    "question": "Business divisions with declining profit margins for three consecutive months",
    "sql_query": "WITH monthly_profit_margin AS ( SELECT business_current_department_code, business_current_department_name, reference_month, SUM(sales_value_at_handling_reference) AS sales, SUM(sales_profit_amount) AS profit, SUM(sales_profit_amount) / NULLIF(SUM(sales_value_at_handling_reference), 0) * 100 AS profit_margin FROM food_sales_table GROUP BY business_current_department_code, business_current_department_name, reference_month ), profit_decline AS ( SELECT business_current_department_code, business_current_department_name, reference_month, profit_margin, LAG(profit_margin, 1) OVER (PARTITION BY business_current_department_code ORDER BY reference_month) AS last_month_profit_margin, LAG(profit_margin, 2) OVER (PARTITION BY business_current_department_code ORDER BY reference_month) AS two_months_ago_profit_margin FROM monthly_profit_margin ) SELECT business_current_department_code, business_current_department_name FROM profit_decline WHERE profit_margin < last_month_profit_margin AND last_month_profit_margin < two_months_ago_profit_margin GROUP BY business_current_department_code, business_current_department_name ORDER BY business_current_department_name;"
  },
  {
    "question": "Monthly revenue, gross profit, and profit margin calculation for each business division",
    "sql_query": "WITH monthly_profit_margin AS ( SELECT reference_month, business_current_department_code, business_current_department_name, SUM(sales_value_at_handling_reference) AS sales, SUM(sales_profit_amount) AS profit, SUM(sales_profit_amount) / NULLIF(SUM(sales_value_at_handling_reference), 0) * 100 AS profit_margin FROM food_sales_table GROUP BY reference_month, business_current_department_code, business_current_department_name ) SELECT reference_month, business_current_department_code, business_current_department_name, sales, profit, profit_margin FROM monthly_profit_margin ORDER BY business_current_department_code, reference_month;"
  },
  {
    "question": "Year-over-year Q1 revenue and profit growth rates by business division and sales channel",
    "sql_query": "WITH quarterly_route_sales AS ( SELECT route_current_business_department_code, business_current_department_code, CASE WHEN reference_month BETWEEN strftime('%Y.%m', date('now', 'start of year', '-1 year', 'start of month')) AND strftime('%Y.%m', date('now', 'start of year', '-1 year', 'start of month', '+2 months')) THEN 'previous_q1' WHEN reference_month BETWEEN strftime('%Y.%m', date('now', 'start of year', 'start of month')) AND strftime('%Y.%m', date('now', 'start of year', 'start of month', '+2 months')) THEN 'current_q1' END AS quarter, SUM(sales_value_at_handling_reference) AS total_sales, SUM(sales_profit_amount) AS total_profit FROM food_sales_table WHERE reference_month BETWEEN strftime('%Y.%m', date('now', 'start of year', '-1 year', 'start of month')) AND strftime('%Y.%m', date('now', 'start of year', 'start of month', '+2 months')) GROUP BY route_current_business_department_code, business_current_department_code, CASE WHEN reference_month BETWEEN strftime('%Y.%m', date('now', 'start of year', '-1 year', 'start of month')) AND strftime('%Y.%m', date('now', 'start of year', '-1 year', 'start of month', '+2 months')) THEN 'previous_q1' WHEN reference_month BETWEEN strftime('%Y.%m', date('now', 'start of year', 'start of month')) AND strftime('%Y.%m', date('now', 'start of year', 'start of month', '+2 months')) THEN 'current_q1' END ) SELECT current.route_current_business_department_code, current.business_current_department_code, (current.total_sales - previous.total_sales) / NULLIF(previous.total_sales, 0) * 100 AS sales_growth_rate, ((current.total_profit / NULLIF(current.total_sales, 0)) - (previous.total_profit / NULLIF(previous.total_sales, 0))) * 100 AS profit_margin_change_rate FROM quarterly_route_sales current JOIN quarterly_route_sales previous ON current.route_current_business_department_code = previous.route_current_business_department_code AND current.business_current_department_code = previous.business_current_department_code AND current.quarter = 'current_q1' AND previous.quarter = 'previous_q1';"
  },
  {
    "question": "Q3 profit margins by business division",
    "sql_query": "SELECT business_current_department_code, business_current_department_name, SUM(sales_value_at_handling_reference) AS total_sales, SUM(sales_profit_amount) AS total_profit, (SUM(sales_profit_amount) / NULLIF(SUM(sales_value_at_handling_reference), 0)) * 100 AS profit_margin FROM food_sales_table WHERE reference_month IN ( strftime('%Y.%m', date('now', 'start of year', '+6 months')), strftime('%Y.%m', date('now', 'start of year', '+7 months')), strftime('%Y.%m', date('now', 'start of year', '+8 months')) ) GROUP BY business_current_department_code, business_current_department_name;"
  },
  {
    "question": "Top products with the highest sales proportion by channel",
    "sql_query": "WITH Total_Sales_By_Route AS ( SELECT route_current_business_department_code, route_current_business_department_name, SUM(sales_value_at_handling_reference) AS total_sales FROM food_sales_table GROUP BY route_current_business_department_code, route_current_business_department_name ), Product_Sales_By_Route AS ( SELECT route_current_business_department_code, route_current_business_department_name, product_number, product_name, SUM(sales_value_at_handling_reference) AS product_sales FROM food_sales_table GROUP BY route_current_business_department_code, route_current_business_department_name, product_number, product_name ), Sales_Percentage_By_Product AS ( SELECT p.route_current_business_department_code, p.route_current_business_department_name, p.product_number, p.product_name, p.product_sales, t.total_sales, (p.product_sales * 100.0 / t.total_sales) AS sales_percentage FROM Product_Sales_By_Route p JOIN Total_Sales_By_Route t ON p.route_current_business_department_code = t.route_current_business_department_code ) SELECT route_current_business_department_code, route_current_business_department_name, product_number, product_name, product_sales, sales_percentage FROM ( SELECT *, ROW_NUMBER() OVER ( PARTITION BY route_current_business_department_code ORDER BY sales_percentage DESC ) AS rn FROM Sales_Percentage_By_Product ) WHERE rn = 1 ORDER BY route_current_business_department_code;"
  },
  {
    "question": "PB_1 product sales proportion relative to total revenue",
    "sql_query": "WITH Total_Sales AS ( SELECT SUM(sales_value_at_handling_reference) AS total_sales FROM food_sales_table ), PB_Sales AS ( SELECT SUM(sales_value_at_handling_reference) AS pb_sales FROM food_sales_table WHERE pb_div_cd IS NOT NULL AND pb_div_cd != '' AND pb_div_nm = 'PB_1' ) SELECT t.total_sales, p.pb_sales, (p.pb_sales * 100.0 / t.total_sales) AS pb_sales_percentage FROM Total_Sales t, PB_Sales p;"
  },
  {
    "question": "Sales proportion of PB_2 products",
    "sql_query": "WITH Total_Sales AS ( SELECT SUM(sales_value_at_handling_reference) AS total_sales FROM food_sales_table ), PB_2_Sales AS ( SELECT SUM(sales_value_at_handling_reference) AS pb_2_sales FROM food_sales_table WHERE pb_div_nm = 'PB_2' ) SELECT t.total_sales, p.pb_2_sales, (p.pb_2_sales * 100.0 / t.total_sales) AS pb_2_sales_percentage FROM Total_Sales t, PB_2_Sales p;"
  },
  {
    "question": "Proportion of PB_3 products among all products",
    "sql_query": "WITH Total_Product_Count AS ( SELECT COUNT() AS total_product_count FROM food_sales_table ), PB_3_Product_Count AS ( SELECT COUNT() AS pb_3_product_count FROM food_sales_table WHERE pb_div_nm = 'PB_3' ) SELECT t.total_product_count, p.pb_3_product_count, (p.pb_3_product_count * 100.0 / t.total_product_count) AS pb_3_product_percentage FROM Total_Product_Count t, PB_3_Product_Count p;"
  },
  {
    "question": "Sales proportion of PB_2 products in Business Division 3",
    "sql_query": "WITH HealthyNuri_Total_Sales AS ( SELECT SUM(sales_value_at_handling_reference) AS total_sales FROM food_sales_table WHERE business_current_department_name = '사업부_3' ), HealthyNuri_PB_Sales AS ( SELECT SUM(sales_value_at_handling_reference) AS pb_sales FROM food_sales_table WHERE business_current_department_name = '사업부_3' AND pb_div_cd IS NOT NULL AND pb_div_cd != '' AND pb_div_nm = 'PB_2' ) SELECT t.total_sales, p.pb_sales, (p.pb_sales * 100.0 / t.total_sales) AS pb_sales_percentage FROM HealthyNuri_Total_Sales t, HealthyNuri_PB_Sales p;"
  }
]